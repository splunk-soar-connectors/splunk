{
    "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
    "name": "Splunk",
    "description": "This app integrates with Splunk to update data on the device, in addition to investigate and ingestion actions",
    "publisher": "Splunk",
    "contributors": [
        {
            "name": "Mayur Pipaliya"
        },
        {
            "name": "Chetan Pangam"
        },
        {
            "name": "Govind Salinas"
        },
        {
            "name": "Atif Mahadik"
        },
        {
            "name": "Alexandra Lomotan"
        },
        {
            "name": "Philip Royer"
        }
    ],
    "type": "siem",
    "main_module": "splunk_connector.py",
    "app_version": "2.11.0",
    "utctime_updated": "2022-02-04T02:22:09.000000Z",
    "package_name": "phantom_splunk",
    "product_name": "Splunk Enterprise",
    "product_vendor": "Splunk Inc.",
    "product_version_regex": ".*",
    "min_phantom_version": "5.3.0",
    "fips_compliant": true,
    "python_version": "3",
    "latest_tested_versions": [
        "On-premise, Splunk Enterprise Security v9.0.0",
        "Cloud, Splunk Cloud Platform v8.2.2112"
    ],
    "logo": "logo_splunk.svg",
    "logo_dark": "logo_splunk_dark.svg",
    "license": "Copyright (c) 2016-2022 Splunk Inc.",
    "pip_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/py3/certifi-2022.6.15-py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/shared/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/shared/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "python_dateutil",
                "input_file": "wheels/shared/python_dateutil-2.8.1-py2.py3-none-any.whl"
            },
            {
                "module": "pytz",
                "input_file": "wheels/shared/pytz-2021.1-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/shared/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "simplejson",
                "input_file": "wheels/py36/simplejson-3.17.2-cp36-cp36m-manylinux2010_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            },
            {
                "module": "six",
                "input_file": "wheels/shared/six-1.16.0-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.3.2.post1-py3-none-any.whl"
            },
            {
                "module": "splunk_sdk",
                "input_file": "wheels/py3/splunk_sdk-1.6.18-py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/shared/urllib3-1.26.12-py2.py3-none-any.whl"
            },
            {
                "module": "xmltodict",
                "input_file": "wheels/shared/xmltodict-0.13.0-py2.py3-none-any.whl"
            }
        ]
    },
    "configuration": {
        "device": {
            "description": "Device IP/Hostname",
            "data_type": "string",
            "order": 0,
            "required": true
        },
        "port": {
            "description": "Port",
            "data_type": "numeric",
            "order": 1,
            "default": 8089
        },
        "username": {
            "description": "Username",
            "order": 2,
            "data_type": "string"
        },
        "password": {
            "description": "Password",
            "order": 3,
            "data_type": "password"
        },
        "api_token": {
            "description": "API token",
            "order": 4,
            "data_type": "password"
        },
        "splunk_owner": {
            "description": "The owner context of the namespace",
            "order": 5,
            "data_type": "string"
        },
        "splunk_app": {
            "description": "The app context of the namespace",
            "order": 6,
            "data_type": "string"
        },
        "timezone": {
            "data_type": "timezone",
            "order": 7,
            "description": "Splunk Server Timezone",
            "required": true
        },
        "verify_server_cert": {
            "data_type": "boolean",
            "order": 8,
            "description": "Verify Server Certificate",
            "default": false
        },
        "on_poll_command": {
            "data_type": "string",
            "order": 9,
            "description": "Command for query to use with On Poll",
            "value_list": [
                "",
                "search",
                "eval",
                "savedsearch",
                "stats",
                "table",
                "tstats"
            ]
        },
        "on_poll_query": {
            "data_type": "string",
            "order": 10,
            "description": "Query to use with On Poll"
        },
        "on_poll_display": {
            "data_type": "string",
            "order": 11,
            "description": "Fields to save with On Poll"
        },
        "on_poll_parse_only": {
            "data_type": "boolean",
            "order": 12,
            "description": "Parse Only",
            "default": true
        },
        "max_container": {
            "data_type": "numeric",
            "order": 13,
            "description": "Max events to ingest for Scheduled Polling (Default: 100)",
            "default": 100
        },
        "container_update_state": {
            "data_type": "numeric",
            "order": 14,
            "description": "Container count to update the state file",
            "default": 100
        },
        "container_name_prefix": {
            "data_type": "string",
            "order": 15,
            "description": "Name to give containers created via ingestion"
        },
        "container_name_values": {
            "data_type": "string",
            "order": 16,
            "description": "Values to append to container name"
        },
        "retry_count": {
            "description": "Number of retries",
            "data_type": "numeric",
            "order": 17,
            "default": 3
        },
        "remove_empty_cef": {
            "description": "Remove CEF fields having empty values from the artifact",
            "data_type": "boolean",
            "order": 18,
            "default": false
        },
        "sleeptime_in_requests": {
            "description": "The time to wait for next REST call (max 120 seconds)",
            "data_type": "numeric",
            "order": 19,
            "default": 1
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity. This action logs into the device to check the connection and credentials",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get host events",
            "description": "Get events pertaining to a host that have occurred in the last 'N' days",
            "verbose": "<ul><li>The <b>last_n_days</b> parameter must be greater than 0.</li><li>The action will search for the events of the hostname (provided in the 'ip_hostname' parameter) in the default index configured on the Splunk instance.</li></ul>",
            "type": "investigate",
            "identifier": "get_host_events",
            "read_only": true,
            "parameters": {
                "ip_hostname": {
                    "description": "Hostname/IP to search the events of",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "ip",
                        "host name"
                    ],
                    "required": true,
                    "primary": true
                },
                "last_n_days": {
                    "description": "Number of days ago",
                    "data_type": "numeric",
                    "order": 1
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Search Results"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ip_hostname",
                    "data_type": "string",
                    "example_values": [
                        "test_host"
                    ],
                    "contains": [
                        "ip",
                        "host name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.last_n_days",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*._bkt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._cd",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._indextime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._raw",
                    "column_name": "Raw",
                    "column_order": 2,
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._serial",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._si",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._sourcetype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._time",
                    "column_name": "Time",
                    "column_order": 1,
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.host",
                    "column_name": "Host",
                    "column_order": 0,
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.index",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.linecount",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourcetype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.splunk_server",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ]
                },
                {
                    "data_path": "action_result.summary.sid",
                    "data_type": "string",
                    "example_values": [
                        "1612177958.977510"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_events",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Sid: 1621953772.25264, Total events: 1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Ingest logs from the Splunk instance",
            "verbose": "The configured query is what will be used during ingestion. If you only wish to show certain fields, then you can specify these as a comma-separated list in the configuration. If left unspecified, all available fields will be added to each artifact. When limiting the number of events to ingest, it will ingest the most recent events.<br><br>",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "container_id": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                },
                "start_time": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                },
                "end_time": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                },
                "container_count": {
                    "description": "Maximum number of events to query for",
                    "data_type": "numeric",
                    "default": 100
                },
                "artifact_count": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                }
            },
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "description": "Run a search query on the Splunk device. Please escape any quotes that are part of the query string",
            "verbose": "By default, the widget for the &quot;run query&quot; action will show the host, time, and raw fields. If you would like to see specific fields parsed out, they can be listed in a comma-separated format in the &quot;display&quot; parameter.<br><br>Please keep in mind that Splunk does not always return all possible fields. Splunk may not return fields that are calculated or not present in the event.<br><br>To work around this you can force Splunk to return specific fields by using the &quot;fields&quot;. By appending &quot;| fields + *&quot; to your query, Splunk will return every field. You can replace the asterisk with a comma-separated list of fields to only return specific fields.<br><br>Finally, some searches (such as those based on data models) can contain name-spaced fields. If a data model called &quot;my_model&quot; with a search &quot;my_search&quot; has a field &quot;hash&quot; then the field will be named &quot;my_search.hash&quot; and that is what must be used in the Splunk fields command and the display parameter. If using a non-global lookup file that is only accessible by a specific Splunk App, make sure to note the specific Splunk App in your asset configuration. The <b>parse_only</b> parameter, if <b>True</b>, it disables the expansion of search due to evaluation of sub-searches, time term expansion, lookups, tags, eventtypes, and sourcetype alias. This parameter is used for the validation of the Splunk query before fetching the results.<br><br>Learn more below:<ul><li><a href='https://docs.splunk.com/Documentation/Splunk/8.2.5/SearchReference/SearchTimeModifiers' target='_blank'>Time modifiers</a></li><li><a href='https://docs.splunk.com/Documentation/Splunk/latest/RESTREF/RESTsearch#search.2Fjobs' target='_blank'>Splunk REST APIs</a></li><li><a href='https://dev.splunk.com/enterprise/docs/devtools/python/sdk-python/howtousesplunkpython/howtorunsearchespython/' target='_blank'>Splunk SDK</a></li></ul>",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "parameters": {
                "command": {
                    "description": "Beginning command (in Splunk Processing Language)",
                    "data_type": "string",
                    "order": 0,
                    "value_list": [
                        "search",
                        "eval",
                        "savedsearch",
                        "stats",
                        "table",
                        "tstats"
                    ],
                    "default": "search"
                },
                "query": {
                    "description": "Query to run (in Splunk Processing Language)",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "splunk query"
                    ]
                },
                "display": {
                    "description": "Display fields (comma-separated)",
                    "data_type": "string",
                    "order": 2
                },
                "parse_only": {
                    "description": "Parse only",
                    "data_type": "boolean",
                    "order": 3,
                    "default": false
                },
                "attach_result": {
                    "description": "Attach result to the vault",
                    "data_type": "boolean",
                    "order": 4,
                    "default": false
                },
                "ph": {
                    "data_type": "ph",
                    "order": 5
                },
                "start_time": {
                    "description": "Earliest time modifier",
                    "data_type": "string",
                    "order": 6
                },
                "end_time": {
                    "description": "Latest time modifier",
                    "data_type": "string",
                    "order": 7
                }
            },
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "splunk_views.display_view",
                "title": "Search Results"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.attach_result",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.command",
                    "data_type": "string",
                    "example_values": [
                        "savedsearch"
                    ]
                },
                {
                    "data_path": "action_result.parameter.display",
                    "data_type": "string",
                    "example_values": [
                        "_time",
                        "index"
                    ]
                },
                {
                    "data_path": "action_result.parameter.end_time",
                    "data_type": "string",
                    "example_values": [
                        "-2d",
                        "2022-03-18T16:12:09.130+00:00"
                    ]
                },
                {
                    "data_path": "action_result.parameter.parse_only",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "contains": [
                        "splunk query"
                    ],
                    "example_values": [
                        "\"Send to test\""
                    ]
                },
                {
                    "data_path": "action_result.parameter.start_time",
                    "data_type": "string",
                    "example_values": [
                        "-2d",
                        "2022-03-18T16:12:07.130+00:00"
                    ]
                },
                {
                    "data_path": "action_result.data.*._bkt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._cd",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._indextime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._kv",
                    "data_type": "string",
                    "example_value": "1"
                },
                {
                    "data_path": "action_result.data.*._raw",
                    "column_name": "Raw",
                    "column_order": 2,
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._serial",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._si",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._sourcetype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._subsecond",
                    "data_type": "string",
                    "example_value": ".427"
                },
                {
                    "data_path": "action_result.data.*._time",
                    "column_name": "Time",
                    "column_order": 1,
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._value",
                    "data_type": "string",
                    "example_values": [
                        "184"
                    ]
                },
                {
                    "data_path": "action_result.data.*.a",
                    "data_type": "string",
                    "example_value": "abc"
                },
                {
                    "data_path": "action_result.data.*.content.app",
                    "data_type": "string",
                    "example_values": [
                        "search"
                    ]
                },
                {
                    "data_path": "action_result.data.*.content.host",
                    "data_type": "string",
                    "example_value": "test"
                },
                {
                    "data_path": "action_result.data.*.content.info",
                    "data_type": "string",
                    "example_value": "granted"
                },
                {
                    "data_path": "action_result.data.*.content.search",
                    "data_type": "string",
                    "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                },
                {
                    "data_path": "action_result.data.*.content.search_type",
                    "data_type": "string",
                    "example_value": "adhoc"
                },
                {
                    "data_path": "action_result.data.*.content.sid",
                    "data_type": "string",
                    "example_value": "1621953839.25275"
                },
                {
                    "data_path": "action_result.data.*.content.source",
                    "data_type": "string",
                    "example_value": "source"
                },
                {
                    "data_path": "action_result.data.*.content.sourcetype",
                    "data_type": "string",
                    "example_value": "source"
                },
                {
                    "data_path": "action_result.data.*.content.uri",
                    "data_type": "string",
                    "example_values": [
                        "/en-US/app/search/search?q=search%20index%3Dmain%20%7C%20head%2010&sid=1651356328.532450&display.page.search.mode=smart&dispatch.sample_ratio=1&workload_pool=&earliest=-24h%40h&latest=now"
                    ]
                },
                {
                    "data_path": "action_result.data.*.content.view",
                    "data_type": "string",
                    "example_values": [
                        "search"
                    ]
                },
                {
                    "data_path": "action_result.data.*.count",
                    "data_type": "string",
                    "example_value": "3058733"
                },
                {
                    "data_path": "action_result.data.*.count(host)",
                    "data_type": "string",
                    "example_value": "28"
                },
                {
                    "data_path": "action_result.data.*.event",
                    "data_type": "string",
                    "example_values": [
                        "{\"data\": {\"count\": 3, \"size\": 112, \"transform\": \"access_app_tracker\"}, \"version\": \"1.0\"}"
                    ]
                },
                {
                    "data_path": "action_result.data.*.host",
                    "column_name": "Host",
                    "column_order": 0,
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ],
                    "example_values": [
                        "10.1.67.187:8088"
                    ]
                },
                {
                    "data_path": "action_result.data.*.index",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.is_Acceleration_Jobs",
                    "data_type": "string",
                    "example_value": "0"
                },
                {
                    "data_path": "action_result.data.*.is_Adhoc_Jobs",
                    "data_type": "string",
                    "example_value": "1"
                },
                {
                    "data_path": "action_result.data.*.is_Failed_Jobs",
                    "data_type": "string",
                    "example_value": "0"
                },
                {
                    "data_path": "action_result.data.*.is_Realtime_Jobs",
                    "data_type": "string",
                    "example_value": "0"
                },
                {
                    "data_path": "action_result.data.*.is_Scheduled_Jobs",
                    "data_type": "string",
                    "example_value": "0"
                },
                {
                    "data_path": "action_result.data.*.is_Subsearch_Jobs",
                    "data_type": "string",
                    "example_value": "0"
                },
                {
                    "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                    "data_type": "string",
                    "example_value": "1"
                },
                {
                    "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                    "data_type": "string",
                    "example_value": "0"
                },
                {
                    "data_path": "action_result.data.*.is_not_Failed_Jobs",
                    "data_type": "string",
                    "example_value": "1"
                },
                {
                    "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                    "data_type": "string",
                    "example_value": "1"
                },
                {
                    "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                    "data_type": "string",
                    "example_value": "1"
                },
                {
                    "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                    "data_type": "string",
                    "example_value": "1"
                },
                {
                    "data_path": "action_result.data.*.linecount",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourcetype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.spent",
                    "data_type": "string",
                    "example_values": [
                        "223"
                    ]
                },
                {
                    "data_path": "action_result.data.*.splunk_server",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user",
                    "data_type": "string",
                    "example_value": "admin"
                },
                {
                    "data_path": "action_result.data.*.values(source)",
                    "data_type": "string",
                    "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                },
                {
                    "data_path": "action_result.summary.sid",
                    "data_type": "string",
                    "example_values": [
                        "1612177958.977510"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_events",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Sid: 1612177958.977510, Total events: 2"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update event",
            "description": "Update a notable event",
            "verbose": "The <b>event_ids</b> parameter takes a single event_id (which has the format: 68E08B8B-A853-3A20-9768-231C97B7EE76@@notable@@a4bd78810ae8e03e285e552fac0ddb23) or an adaptive response SID + RID combo (which has the format: scheduler__admin__SplunkEnterpriseSecuritySuite__RMD515d4671130158e57_at_1532441220_4982+0).<br><br>NOTE: This action only works with a notable event from Splunk ES.<br><br>Second Note: The <b>status</b> parameter takes a string value, but custom status values are unique to installation and not available at app creation. The <b>integer_status</b> parameter takes a positive integer denoting the custom value desired. This integer must be determined by the customer on-site. If set it will override <b>status</b>.",
            "type": "generic",
            "identifier": "update_event",
            "read_only": false,
            "parameters": {
                "event_ids": {
                    "description": "Event ID to update",
                    "data_type": "string",
                    "contains": [
                        "splunk notable event id"
                    ],
                    "required": true,
                    "order": 0,
                    "primary": true
                },
                "comment": {
                    "description": "New comment for the event",
                    "data_type": "string",
                    "order": 5
                },
                "status": {
                    "description": "New status for the event",
                    "data_type": "string",
                    "value_list": [
                        "",
                        "unassigned",
                        "new",
                        "in progress",
                        "pending",
                        "resolved",
                        "closed"
                    ],
                    "order": 2
                },
                "integer_status": {
                    "description": "Integer representing custom status value",
                    "data_type": "numeric",
                    "order": 3
                },
                "urgency": {
                    "description": "New urgency for the event",
                    "data_type": "string",
                    "value_list": [
                        "",
                        "informational",
                        "low",
                        "medium",
                        "high",
                        "critical"
                    ],
                    "order": 4
                },
                "owner": {
                    "description": "New owner for the event",
                    "data_type": "string",
                    "order": 1
                },
                "wait_for_confirmation": {
                    "description": "Validate event_ids",
                    "data_type": "boolean",
                    "default": false,
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.comment",
                    "data_type": "string",
                    "example_values": [
                        "test comment"
                    ]
                },
                {
                    "data_path": "action_result.parameter.event_ids",
                    "data_type": "string",
                    "contains": [
                        "splunk notable event id"
                    ],
                    "example_values": [
                        "1542751027.136723+0"
                    ]
                },
                {
                    "data_path": "action_result.parameter.integer_status",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.parameter.owner",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.parameter.status",
                    "data_type": "string",
                    "example_values": [
                        "new"
                    ]
                },
                {
                    "data_path": "action_result.parameter.urgency",
                    "data_type": "string",
                    "example_values": [
                        "low"
                    ]
                },
                {
                    "data_path": "action_result.parameter.wait_for_confirmation",
                    "data_type": "boolean",
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.failure_count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.message",
                    "data_type": "string",
                    "example_values": [
                        "1 event updated successfully"
                    ]
                },
                {
                    "data_path": "action_result.data.*.success",
                    "data_type": "boolean",
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.success_count",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.summary.sid",
                    "data_type": "string",
                    "example_values": [
                        "1612177958.977510"
                    ]
                },
                {
                    "data_path": "action_result.summary.updated_event_id",
                    "data_type": "string",
                    "example_values": [
                        "2CF264EE-6016-4F6A-BCC3-4B7251E113F7@@notable@@035142b19c09ab645c6bbfb847e866f4"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Updated event id: 2CF264EE-6016-4F6A-BCC3-4B7251E113F7@@notable@@035142b19c09ab645c6bbfb847e866f4"
                    ],
                    "column_name": "Message",
                    "column_order": 1
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)",
            "render": {
                "width": 12,
                "title": "Update Event",
                "type": "table",
                "height": 5
            }
        },
        {
            "action": "post data",
            "description": "Post data to Splunk",
            "verbose": "This action creates an event on Splunk with the data included in the <b>data</b> parameter. If not specified the parameters will default to the following:<ul><li><b>host</b> - The IP of the Phantom instance running the action.</li><li><b>index</b> - The default index configured on the Splunk instance.</li><li><b>source</b> - &quot;Phantom&quot;.</li><li><b>source_type</b> - &quot;Automation/Orchestration Platform&quot;.</li></ul>",
            "type": "generic",
            "identifier": "post_data",
            "read_only": false,
            "parameters": {
                "data": {
                    "description": "Data to post",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "host": {
                    "description": "Host for event",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "host name"
                    ],
                    "primary": true,
                    "order": 1
                },
                "index": {
                    "description": "Index to send event to",
                    "data_type": "string",
                    "order": 4
                },
                "source": {
                    "description": "Source for event",
                    "data_type": "string",
                    "default": "Phantom",
                    "order": 2
                },
                "source_type": {
                    "description": "Type of source for event",
                    "data_type": "string",
                    "default": "Automation/Orchestration Platform",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.data",
                    "data_type": "string",
                    "example_values": [
                        "test_data"
                    ]
                },
                {
                    "data_path": "action_result.parameter.host",
                    "data_type": "string",
                    "example_values": [
                        "test_host"
                    ],
                    "contains": [
                        "ip",
                        "host name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.index",
                    "data_type": "string",
                    "example_values": [
                        "main"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_type",
                    "data_type": "string",
                    "example_values": [
                        "pb"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully posted the data"
                    ],
                    "column_name": "Message",
                    "column_order": 1
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)",
            "render": {
                "width": 12,
                "title": "Post Data",
                "type": "table",
                "height": 5
            }
        }
    ],
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/py3/certifi-2022.6.15-py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/shared/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/shared/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "python_dateutil",
                "input_file": "wheels/shared/python_dateutil-2.8.1-py2.py3-none-any.whl"
            },
            {
                "module": "pytz",
                "input_file": "wheels/shared/pytz-2021.1-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/shared/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "simplejson",
                "input_file": "wheels/py39/simplejson-3.17.2-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            },
            {
                "module": "six",
                "input_file": "wheels/shared/six-1.16.0-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.3.2.post1-py3-none-any.whl"
            },
            {
                "module": "splunk_sdk",
                "input_file": "wheels/py3/splunk_sdk-1.6.18-py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/shared/urllib3-1.26.12-py2.py3-none-any.whl"
            },
            {
                "module": "xmltodict",
                "input_file": "wheels/shared/xmltodict-0.13.0-py2.py3-none-any.whl"
            }
        ]
    }
}
